#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã Charity Bot
"""

import subprocess
import sys
import time
import requests
import signal
import os

class SystemManager:
    def __init__(self):
        self.processes = []
        
    def start_backend(self):
        """–ó–∞–ø—É—Å–∫ FastAPI backend"""
        try:
            print("üöÄ –ó–∞–ø—É—Å–∫ FastAPI backend...")
            process = subprocess.Popen([
                sys.executable, "-m", "uvicorn", "main:app", 
                "--reload", "--host", "0.0.0.0", "--port", "8000"
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            self.processes.append(("Backend", process))
            time.sleep(3)
            print("‚úÖ Backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend: {e}")
            return False
    
    def start_ml_api(self):
        """–ó–∞–ø—É—Å–∫ ML API"""
        try:
            print("ü§ñ –ó–∞–ø—É—Å–∫ ML API...")
            process = subprocess.Popen([
                sys.executable, "ml_risk_api.py"
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            self.processes.append(("ML API", process))
            time.sleep(3)
            print("‚úÖ ML API –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:5001")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ML API: {e}")
            return False
    
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        try:
            print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
            process = subprocess.Popen([
                sys.executable, "bot.py"
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            self.processes.append(("Bot", process))
            time.sleep(2)
            print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            return False
    
    def check_services(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤"""
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
        try:
            response = requests.get("http://localhost:8000/docs", timeout=5)
            if response.status_code == 200:
                print("‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print("‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        except:
            print("‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ ML API
        try:
            response = requests.get("http://localhost:5001/health", timeout=5)
            if response.status_code == 200:
                print("‚úÖ ML API —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print("‚ùå ML API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        except:
            print("‚ùå ML API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    def stop_all(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...")
        for name, process in self.processes:
            try:
                process.terminate()
                process.wait(timeout=5)
                print(f"‚úÖ {name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except:
                process.kill()
                print(f"‚ö†Ô∏è {name} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        self.stop_all()
        sys.exit(0)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    manager = SystemManager()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, manager.signal_handler)
    signal.signal(signal.SIGTERM, manager.signal_handler)
    
    print("üéâ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã Charity Bot...")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
    success = True
    success &= manager.start_backend()
    success &= manager.start_ml_api()
    success &= manager.start_bot()
    
    if success:
        print("\nüéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        manager.check_services()
        
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:")
        print("üåê Backend API: http://localhost:8000")
        print("üìä API Docs: http://localhost:8000/docs")
        print("ü§ñ ML API: http://localhost:5001")
        print("üì± Telegram Bot: –∞–∫—Ç–∏–≤–µ–Ω")
        
        print("\n‚èπÔ∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        try:
            # –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–∫—Ç–∏–≤–Ω—ã–º–∏
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        manager.stop_all()
        sys.exit(1)

if __name__ == "__main__":
    main() 